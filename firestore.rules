rules_version = '2';

service cloud.firestore {
  match /databases/{db}/documents {

    /* ---------- 1. USERS ---------------------------------------- */
    match /users/{uid} {
      allow read: if request.auth != null;

      /*  каждый редактирует только себя  */
      allow create, update: if request.auth != null && request.auth.uid == uid;

      allow delete: if false;
    }

    /* ---------- 2. ROOMS ---------------------------------------- */
    match /rooms/{roomId} {
      allow read: if request.auth != null;

      /*  создать комнату – любой авторизованный  */
      allow create: if request.auth != null;

      /*
        менять комнату можно, если текущий пользователь
        уже находится в массиве memberIds
      */
      allow update: if request.auth != null &&
                    (request.auth.uid in resource.data.memberIds);

      allow delete: if false;
    }

    /* ---------- 3. MATCHES -------------------------------------- */
    match /matches/{matchId} {
      allow read: if request.auth != null;

      /*  записать матч – если пользователь один из игроков  */
      allow create: if request.auth != null &&
                    (request.resource.data.player1Id == request.auth.uid ||
                     request.resource.data.player2Id == request.auth.uid);

      /*  дальнейшие правки / удаление запрещены клиенту  */
      allow update, delete: if false;
    }

    /* ---------- 4. TOURNAMENTS ---------------------------------- */
    match /tournaments/{tid} {
      allow read: if request.auth != null;

      /*  создать турнир – владелец указан в документе  */
      allow create: if request.auth != null &&
                    request.resource.data.ownerId == request.auth.uid;

      /*  менять – только владелец  */
      allow update: if request.auth != null &&
                    resource.data.ownerId == request.auth.uid;

      allow delete: if false;
    }

    /* ---------- 5. FALLBACK ------------------------------------- */
    match /{document=**} {
      allow read:  if request.auth != null;
      allow write: if false;
    }
  }
}